{"ast":null,"code":"var _jsxFileName = \"/Users/sutthikiatphongsakornmetha/Documents/TestProject/next-test/components/InputUpload/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useState } from \"react\";\nimport CSVReader from \"react-csv-reader\";\nimport { DivInputUpload, DivInputUploadTitle, DivInputUploadFile, CardUpload } from \"./styles\";\n\nconst InputUpload = () => {\n  const inputRef = useRef(null);\n  const {\n    0: file,\n    1: setFile\n  } = useState(null);\n\n  function onClickUpload() {\n    // let input = inputRef.current;\n    let input2 = document.getElementById(\"ss\"); // input.click();\n\n    console.log(input2);\n  }\n\n  function onChangeInput(e) {\n    let value = e.target.value;\n    let json = csvToJson.getJsonFromCsv(\"value\");\n    console.log(json);\n  }\n\n  console.log(file);\n  return __jsx(React.Fragment, null, __jsx(DivInputUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(DivInputUploadTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Bulk Upload form \"), __jsx(\"div\", {\n    className: \"text-help\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"you haven't upload any bulk data yed\"))), __jsx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(DivInputUploadFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Choose your an input medthod\"), __jsx(CardUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-upload\",\n    onClick: () => onClickUpload(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"via CSV file\"), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"\\u0E2D\\u0E31\\u0E1B\\u0E40\\u0E14\\u0E15\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\\u0E08\\u0E32\\u0E01\\u0E44\\u0E1F\\u0E25\\u0E4C CSV \"))), __jsx(CSVReader, {\n    inputStyle: {\n      display: \"none\"\n    },\n    inputId: \"ss\",\n    onFileLoaded: (data, fileInfo) => console.dir(data, fileInfo),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default InputUpload;","map":{"version":3,"sources":["/Users/sutthikiatphongsakornmetha/Documents/TestProject/next-test/components/InputUpload/index.js"],"names":["useRef","useState","CSVReader","DivInputUpload","DivInputUploadTitle","DivInputUploadFile","CardUpload","InputUpload","inputRef","file","setFile","onClickUpload","input2","document","getElementById","console","log","onChangeInput","e","value","target","json","csvToJson","getJsonFromCsv","display","data","fileInfo","dir"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,SACEC,cADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,UAJF,QAKO,UALP;;AAOA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAA,OAACS,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC,IAAD,CAAhC;;AAEA,WAASU,aAAT,GAAyB;AACvB;AACA,QAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,IAAxB,CAAb,CAFuB,CAGvB;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD;;AAED,WAASK,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,QAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AAEA,QAAIE,IAAI,GAAGC,SAAS,CAACC,cAAV,CAAyB,OAAzB,CAAX;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACD;;AAEDN,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAEA,SACE,4BACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,CAFF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAE,MAAME,aAAa,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+HAFF,CAbF,CAFF,EAoBE,MAAC,SAAD;AACE,IAAA,UAAU,EAAE;AAAEa,MAAAA,OAAO,EAAE;AAAX,KADd;AAEE,IAAA,OAAO,EAAE,IAFX;AAGE,IAAA,YAAY,EAAE,CAACC,IAAD,EAAOC,QAAP,KAAoBX,OAAO,CAACY,GAAR,CAAYF,IAAZ,EAAkBC,QAAlB,CAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CARF,CADF,CADF;AAuCD,CA5DD;;AA8DA,eAAenB,WAAf","sourcesContent":["import { useRef, useState } from \"react\";\nimport CSVReader from \"react-csv-reader\";\n\nimport {\n  DivInputUpload,\n  DivInputUploadTitle,\n  DivInputUploadFile,\n  CardUpload,\n} from \"./styles\";\n\nconst InputUpload = () => {\n  const inputRef = useRef(null);\n  const [file, setFile] = useState(null);\n\n  function onClickUpload() {\n    // let input = inputRef.current;\n    let input2 = document.getElementById(\"ss\");\n    // input.click();\n    console.log(input2);\n  }\n\n  function onChangeInput(e) {\n    let value = e.target.value;\n\n    let json = csvToJson.getJsonFromCsv(\"value\");\n\n    console.log(json);\n  }\n\n  console.log(file);\n\n  return (\n    <>\n      <DivInputUpload>\n        <DivInputUploadTitle>\n          <h2 className=\"title\">Bulk Upload form </h2>\n          <div className=\"text-help\">\n            <span>you haven't upload any bulk data yed</span>\n          </div>\n        </DivInputUploadTitle>\n        <hr />\n        <DivInputUploadFile>\n          <h2 className=\"title\">Choose your an input medthod</h2>\n          <CardUpload>\n            <div className=\"icon-upload\" onClick={() => onClickUpload()}>\n              {/* <input\n                ref={inputRef}\n                type=\"file\"\n                name=\"fileToUpload\"\n                id=\"fileToUpload\"\n                size=\"1\"\n                style={{ display: \"none\" }}\n                onChange={(e) => onChangeInput(e)}\n              /> */}\n              <i className=\"fas fa-upload\" />\n            </div>\n            <div>\n              <h4>via CSV file</h4>\n              <h4>อัปเดตข้อมูลจากไฟล์ CSV </h4>\n            </div>\n          </CardUpload>\n          <CSVReader\n            inputStyle={{ display: \"none\" }}\n            inputId={\"ss\"}\n            onFileLoaded={(data, fileInfo) => console.dir(data, fileInfo)}\n          />\n        </DivInputUploadFile>\n      </DivInputUpload>\n    </>\n  );\n};\n\nexport default InputUpload;\n"]},"metadata":{},"sourceType":"module"}